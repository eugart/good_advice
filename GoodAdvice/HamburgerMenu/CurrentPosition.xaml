<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:HamburgerMenu="clr-namespace:HamburgerMenu;assembly=HamburgerMenu" 
        xmlns:local="clr-namespace:GoodAdvice" 
        xmlns:awe="http://schemas.awesomium.com/winfx" x:Class="GoodAdvice.CurrentPosition" 
        mc:Ignorable="d" 
        Title="Good Advice" 
        Width="Auto" Height="Auto" >
    <Page.Resources>
        <Style x:Key="RoundProgressBarStyle" TargetType="{x:Type ProgressBar}"
       xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <Style.Resources>
                <local:RoundProgressPathConverter x:Key="Conv"/>
                <!-- нам понадобится пара констант -->
                <!-- доля рабиуса для внутренней части -->
                <sys:Double x:Key="RelativeThickness">0.75</sys:Double>
                <!-- просто 0 -->
                <sys:Double x:Key="Zero">0.0</sys:Double>
                <!-- просто 1 -->
                <sys:Double x:Key="One">1.0</sys:Double>
                <!-- какой процент рисовать для неопределённого состояния -->
                <sys:Double x:Key="IndeterminatePart">0.25</sys:Double>
                <!-- обычно прогресс по умолчанию зелёный -->
                <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
                <!-- стандартный фон -->
                <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
                <!-- стандартный цвет границы -->
                <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
            </Style.Resources>
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <!-- в неопределённом состоянии запускаем вращающуюся анимацию -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation 
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                        Storyboard.TargetName="Animation"
                                        From="0" To="360" Duration="0:0:2"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- это фон, красим его в цвет фона-->
                            <Path Fill="{TemplateBinding Background}" Stretch="Uniform"
                          Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}"
                                          ConverterParameter="{StaticResource RelativeThickness}">
                                        <!-- val=1, min=0, max=1 даёт полный круг -->
                                        <Binding Source="{StaticResource One}"/>
                                        <Binding Source="{StaticResource Zero}"/>
                                        <Binding Source="{StaticResource One}"/>
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Name="Indicator">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}"
                                          ConverterParameter="{StaticResource RelativeThickness}">
                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <!-- это анимировнная штука, будет показываться в неопределённом состоянии -->
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Name="Animation"
                          Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}"
                                          ConverterParameter="{StaticResource RelativeThickness}">
                                        <Binding Source="{StaticResource IndeterminatePart}"/>
                                        <Binding Source="{StaticResource Zero}"/>
                                        <Binding Source="{StaticResource One}"/>
                                    </MultiBinding>
                                </Path.Data>
                                <!-- положим пустое вращение, чтобы к нему цеплялась анимация -->
                                <Path.RenderTransform>
                                    <RotateTransform/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- в случае неопределённого состояния уберём нормальный индикатор и покажем анимацию -->
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="Animation" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
            <Border 
                Name="Border"
                BorderBrush="Orange" 
                BorderThickness="3" 
                Padding="0, 2"
                Background="Black"
                CornerRadius="10"
                TextBlock.Foreground="Orange">
                <ContentPresenter RecognizesAccessKey="True"></ContentPresenter>
            </Border>
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard Name="MouseEnter">
                        <Storyboard >
                            <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            AutoReverse="False"
                                            To="Orange"
                                            Duration="0:0:0.1"/>
                            <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            AutoReverse="False"
                                            To="White"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard Name="MouseLeave">
                        <Storyboard >
                            <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            AutoReverse="False"
                                            To="Black"
                                            Duration="0:0:0.1"/>
                            <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            AutoReverse="False"
                                            To="Orange"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Page.Resources>
    <Grid>
        <Grid Background="Black" 
              Opacity="0.65" 
              Name="BG"/>

        <Viewbox Stretch="Uniform" VerticalAlignment="Center" Name="viewBox1">
            <TextBox Name = "textBox"
                     IsReadOnly="True"
                     Opacity="0.75"
                     Margin="50, 0, 50, 50"
                     VerticalAlignment="Center"
                     Text="Определение вашего местоположения..."
                     Background="White"
                     Foreground="Black"
                     BorderThickness="0"
                     FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book"/>
        </Viewbox>
        
        <ProgressBar Name = "PB" Value="0.7" Maximum="1" Height="90" Width="90" 
                     Style="{DynamicResource RoundProgressBarStyle}"
                     Foreground="#FFED1C24" Background="#FFEBB249" IsIndeterminate="True">
        </ProgressBar>
        
        <Image  Name = "picture"  Source="/image/progessBar/pb.ico" Stretch="None" Margin="0,1.5,-2,0"/>
        
        <Grid Name = "WP" Margin="110,150,110,230"  Background="Black" Opacity="0.65" Visibility="Hidden" MaxHeight="200">
            
            <Viewbox Stretch="Uniform" VerticalAlignment="Top" Name="viewBox2">
                <Label Name = "textBox2" VerticalAlignment="Top" HorizontalAlignment="Center" Background="Black" Foreground="White" BorderThickness="0" FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book"/>
            </Viewbox>
            
            <Viewbox Stretch="Uniform" VerticalAlignment="Top" Name="viewBox5" Visibility="Collapsed">
                <Label Name = "textBox3" Content="Укажите свое местоположение вручную....." VerticalAlignment="Top" HorizontalAlignment="Center" Background="Black" Foreground="White" BorderThickness="0" FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book"/>
            </Viewbox>
            
            <Viewbox Stretch="Uniform" VerticalAlignment="Bottom" Name="viewBox3">
                <Button IsDefault="True" 
                        Name="but1"
                        Template="{StaticResource ButtonTemplate}" 
                        Margin="30, 100, 350, 10" 
                        Height="50" 
                        Width="250"
                        TextBlock.FontSize="35" 
                        TextBlock.FontFamily="/GoodAdvice;component/Fonts/#Bebas Neue Book"
                        TextBlock.TextAlignment="Center" FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book" Click="Button_Click"
                        >Да</Button>
            </Viewbox>
            
            <Viewbox Stretch="Uniform" VerticalAlignment="Bottom" Name="viewBox4">
                <Button IsCancel="True" 
                        Name="but2"
                        Template="{StaticResource ButtonTemplate}" 
                        Margin="350, 100, 30, 10" 
                        Height="50" 
                        Width="250" 
                        TextBlock.FontSize="35" 
                        TextBlock.FontFamily="/GoodAdvice;component/Fonts/#Bebas Neue Book"
                        TextBlock.TextAlignment="Center" FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book"
                        Click="Button_Click_1"
                        >Нет</Button>
            </Viewbox>

            <Viewbox Stretch="Uniform" VerticalAlignment="Bottom" HorizontalAlignment="Left" Name="viewBox6" Visibility="Collapsed" Height="100" MaxWidth="450" MinWidth="400" Margin="10, 0, 0 10">
                <TextBox Focusable="True"
                         Text="Введите название города"
                         BorderThickness="5"
                         BorderBrush="Orange"
                         TextAlignment="Center" Name = "textBox4" FontSize="80" Height="100" Width="750" VerticalAlignment="Top" HorizontalAlignment="Left" Background="White" Foreground="Black" FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book" PreviewMouseLeftButtonDown="textBox4_PreviewMouseLeftButtonDown" TextChanged="textBox4_TextChanged"/>
            </Viewbox>
            <Viewbox HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="70" Height="70" Margin="50, 0, 0, 0">
                <Image  Name = "picture2"  Source="/image/state/state1.ico" Stretch="None" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="Collapsed" Margin="0, 0, 10, 13"/>
            </Viewbox>
            <Viewbox HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="70" Height="70" Margin="50, 0, 0, 0">
                <Image  Name = "picture3"  Source="/image/state/state2.ico" Stretch="None" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="Collapsed" Margin="0, 0, 10, 13"/>
            </Viewbox>
        </Grid>

        <Viewbox Stretch="Uniform" VerticalAlignment="Center" Name="viewBox7" Visibility="Collapsed" Height="100"  Width="300" Margin="0, 250, 0, 0">
            <Button IsCancel="True" 
                        Name="but3"
                        Template="{StaticResource ButtonTemplate}" 
                        Opacity="0.65"
                        Width="250"
                        TextBlock.FontSize="35" 
                        TextBlock.FontFamily="/GoodAdvice;component/Fonts/#Bebas Neue Book"
                        TextBlock.TextAlignment="Center" FontFamily="/GoodAdvice;component/fonts/#Bebas Neue Book"
                        Click="but3_Click"
                        >Подтвердить</Button>
        </Viewbox>
        <Frame x:Name="ContentFrame" ContentRendered="ContentFrame_ContentRendered" />
    </Grid>
</Page>
